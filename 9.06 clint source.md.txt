#pragma comment(lib, "ws2_32")
#include <stdio.h>
#include <winsock2.h>
void Error_Handling(char* message);

int main(void) {
	WSADATA wsaData;
	SOCKET hSocket; //소켓 주소를 표현하는 구조체
	SOCKADDR_IN servAddr; //IPv4에서 사용하는 구조체

	char message[30];
	int strLen;
	//char ip[] = "127.0.0.1";
	//char port[] = "5000";
	
	//printf("Client\n");

	if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) /*동적으로 함수를 가져오고, 성공적으로 실행될시 0을 반환한다.
												   MAKEWORD는 2개의 인수를 사용하는 매크로이다.
												   WORD는16비트의 부호가 없는 변수로 WSAStartup()에서는 WORD의 16비트에서 
												   상위 8비트에 Major번호 하위 8비트에 Minor번호를 넣어 넘겨주어야 한다.*/
		Error_Handling("WSAStartup() error"); //실행에 문제가 있을 시 에러 메시지
	hSocket = socket(PF_INET, SOCK_STREAM, 0); /*PF_INET -> IPv4 인터넷 프로토콜 사용
											   SOC_STRAM -> TCP/IP 프로토콜 이용
											   소켓 생성에 실패한 경우 INVALID_SOCKET 반환*/
	if (hSocket == INVALID_SOCKET)
		Error_Handling("socket() error"); //소켓 생성에 실패했을 경우 에러 메시지

	memset(&servAddr, 0, sizeof(servAddr)); /*간혹 IP가 터무니 없는 값으로 인식되는 경우가 
											생기므로 memset이나 zeroMemory
											를 사용하여 초기화 후 사용해야 한다*/
	servAddr.sin_family = AF_INET; /*AF_INET -> IPv4 인터넷 프로토콜 사용*/
	servAddr.sin_addr.s_addr = inet_addr("127.0.0.1");/*127.0.0.1은 IP이며 OSI7 계층이 순차적으로 
													  돌지 않고 다시 올라오게 한다(자기 자신과 통신)*/
	servAddr.sin_port = htons(atoi("9190")); /*servAddr -> 서버의 주소와 모든정보를 가지고 있는 변수*/

	if (connect(hSocket, (SOCKADDR*)& servAddr, sizeof(servAddr)) == SOCKET_ERROR) //connect 함수호출을 통해서 서버프로그램에 연결을 요청
		Error_Handling("connect() error");

	strLen = recv(hSocket, message, sizeof(message) - 1, 0);/*hSocket : 소켓 디스크립터 , message : 버퍼 포인터 데이터
															sizeof(message) : 버퍼의 바이트 단위 크기
															recv()함수는 소켓으로부터 데이터를 수신*/
	if (strLen == -1)
		Error_Handling("read() error");
	printf("Message from server : %s \n", message); //message 출력

	closesocket(hSocket); //종료 동작 수행, 함수 호출이 끝나는 시점에 socket리소스를 반환
	WSACleanup(); //윈속 해제
	return 0;
}

void Error_Handling(char* message) {
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}
